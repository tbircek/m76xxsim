block scripts

	script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js' integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo' crossorigin='anonymous')
	
	script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js' integrity='sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49' crossorigin='anonymous')
	
	script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js' integrity='sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM' crossorigin='anonymous')
	
	// Load React.
	// Note: when deploying, replace "development.js" with "production.min.js".
	
	if (process.env.NODE_ENV === 'production')
		script(src='https://unpkg.com/react@16/umd/react.production.min.js' crossorigin)
		script(src='https://unpkg.com/react-dom@16/umd/react-dom.production.min.js' crossorigin)
		
	else if (process.env.NODE_ENV === 'development')
		script(src='https://unpkg.com/react@16/umd/react.development.js' crossorigin)
		script(src='https://unpkg.com/react-dom@16/umd/react-dom.development.js' crossorigin)
	
	// Load our React component.
	
	script(src='./like_button.js')
	// script(src='./getUserOptions.js')
	
	script.
		function getOption() {
	
			let bOptions = document.querySelector('input[name="bOptions"]:checked').value; 
			let aOptions =document.querySelector('input[name="aOptions"]:checked').value;
			let breakerModel = bOptions + ', ' + aOptions;
			let startPosition = document.querySelector('input[name="startPositions"]:checked').value;
		
			let operationMode = document.querySelector('input[name="tripOptions"]:checked').value + ' ' + document.querySelector('input[name="closeOptions"]:checked').value;
		
			let closeOperationDelay = document.querySelector('input[name="closeOperationDelay"]').value;
			let tripOperationDelay = document.querySelector('input[name="tripOperationDelay"]').value;
		
			console.log('script');
			console.log('breakerModel: ' + breakerModel);
			console.log('startPosition: ' + startPosition);
			console.log('operationMode: ' + operationMode);
			console.log('closeOperationDelay: ' + closeOperationDelay);
			console.log('tripOperationDelay: ' + tripOperationDelay);
		
			let myHeaders = new Headers();
			let myInit = {
				method: 'PUT',
				headers: myHeaders,
				mode: 'cors',
				cache: 'default'
			};
			
			let message = '?breakerModel=' + breakerModel + '&startPosition=' + startPosition + '&operationMode=' + operationMode + '&closeOperationDelay=' + closeOperationDelay + '&tripOperationDelay=' + tripOperationDelay;
		
			let myRequest = new Request(message, myInit);
		
			fetch(myRequest)
		}